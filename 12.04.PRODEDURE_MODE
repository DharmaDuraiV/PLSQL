

I) IN MODE 
	 Used to pass a value into a procedure or function by defaultly it is in parameter.
 SYNTAX:
 	PARAMATERNAME IN DATATYPE 

example :
**********

CREATE OR REPLACE PROCEDURE show_square(n IN NUMBER) 
IS
  result NUMBER;
BEGIN
  result := n * n;
  DBMS_OUTPUT.PUT_LINE('Square is: ' || result);
END;
/


II) OUT MODE 
	Used to return a value from a procedure
	OUT MODE INTERNALLY BEHAVES LIKE A UNINITIALIZED VARIBLE IN PROCEDURE BODY 
 SYNTAX:
 	PARAMATERNAME OUT DATATYPE 

EX:
 	WRITE A PLSQL PROGRAM TO FIND THE TWO NUMBERS OF SQUARE 
 
	CREATE OR REPLACE PROCEDURE P1 ( A IN NUMBER ,B OUT NUMBER ) 
	IS 
	BEGIN 
	  B := A*A ;
	END ;
	/

IF THE ORACLE SUBPROGRAMS CONTAINS OUT AND IN OUT PARAMETER THOSE SUBPROGEAMS ARE EXECUTED USING FOLLOWING TWO METHODS 
  
 	METHODS 1: USING BIND VARIABLE
	METHODS 1: USING ANNONYMOUS BLOCKS

BIND VARIABLE :
  THESE BIND VARIABLE ARE SESSION VARIABLES 
  THESE VARIABLES ARE CREATED AT HOST ENVIRONMENT THATS WHY THESE VARIABLES ARE ALSO CALLED AS HOST VARIABLES 

    STEP 1: CREATE A BIND VARIABLES 
	SYNTAX:
		VARIABLE VARIABLE_NAME DATATYPES ;
    STEP 2: USING BIND VARIABLES 
	SYNTAX:  
		:VARIABLE_NAME 
    STEP 3: DISPLAY VALUE FROM BIND VARIABLES 
	SYNTAX:
		PRINT BIND_VARIABLE_NAME ;

EX:

SQL> VARIABLE K NUMBER ;
  
SQL>   DECLARE 
        A NUMBER := 2 ;
       BEGIN 
        :K := A*A ;
       END ;
       /
   
 SQL>  PRINT K ;


METHODS 1 : USING BIND VARIBALE 

SQL >  VAR Z NUMBER ;

SQL> EXEC P1(10,:Z);

SQL> PRINT Z ;

O/P :

   Z
  ----
  100
	

METHODS 2 : USING ANNONYMOUS BLOCKS 

EX: DECLARE 
     X NUMBER ;
    BEGIN 
     P1(6,X);
     DBMS_OUTPUT.PUT_LINE(X);
    END ;
    /

ASSIGNMENTS :
 1. WRITE  A PLSQL STRORE PROCEDURE FOR PASSING EMPLOYEE NAME AS PARAMETER AND  RETURN SALARY OF THE EMPLOYEES USING OUTR PARAMETERS.
 2. WRITE  A PLSQL STRORE PROCEDURE FOR PASSING DEPTNO AS A A=PARAMETER AND RETURN NUMBER OF DEPTNO 'S AS OUT PARAMETER FROM EMP'S TABLE



III) IN OUT MODE 
  
   THIS MODE IS USED TO PASS THE VALUES INTO SUBPROGRAMS AND RETURN VALUES FROM SUBPROGRAMS 

SYNTAX:  PARAMETER_NAME IN OUT DATATYPE 

EX: SQURE OF A NUMBER 

    CREATE OR REPLACE PROCEDURE P1( A IN OUT NUMBER)
    IS 
    BEGIN 
      A := A*A ;
    END ;
    /

   EXECUTION :
     
    DECLARE 
     X NUMBER := &X ;
    BEGIN 
     P1(X);
      DBMS_OUTPUT.PUT_LINE(X);
    END ;
    /
