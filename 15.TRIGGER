TRIGGERS:
-------------
TRIGGER IS ALSO SAME AS STORED PROCEDURE & ALSO IT WILL AUTOMATICALLY INVOKED WHENEVER DML OPERATION PERFORMED AGAINST TABLE OR VIEW .
THERE ARE TWO TYPES OF TRIGGERS SUPPORTED BY PL/SQL
1) STATMENTS LEVEL TRGGERS
2) ROW LEVEL TRIGGERS

IN STATEMENTS LEVEL TRIGGER, TRIGGER BODY IS EXECUTED ONLY ONCE FOR DML STATEMENTS.
WHERE AS IN ROW LEVEL TRIGGER ,TRIGGER BODY IS EXECUTED FOR EACH ROW FOR DML STATEMENTS.

SYNTAX:
CREATE OR REPLACE TRIGGER TRIGGER_NAME
BEFORE /AFTER
INSERT/UPDATE/DELETE ON TABLE_NAME
[ FOR EACH ROW]
[ WHERE CONDITION ]
[DELCARE]
[VARIABLE  DECLARATION ,CURSORS]
BEGIN
// STATEMENTS
END ;
/

ROW LEVEL TRIGGERS

--> IN ROW LEVEL TRIGGER ,TRIGGER BODY IS EXECUTED FOR EACH ROW FOR DML STATEMENTS THATS WHY WE ARE USING  EACH ROW  CLAUSE IN TRIGGER SPECIFICATION AND ALSO DATA INTERNALLY STORED IN 2 ROLLBACK STATMENTS QUALIFIERS THESE ARE OLD AND NEW

--> WHEN WE ARE USING THER  MODIFIERS IN TRIGGER BODY WE MUST USE COLON PRIFIX IN THE QUALIFIERS

SYNTAX:
:OLD.COL_NAME
:NEW.COL_NAME


--> WRITE A PL/SQL ROW LEVEL TRIGGER ON EMPLOYEE TABLE WHENEVER USER INSERTING THE DATA INTO A EMP TABLE SAL SHOULD BE ABOVE MORE THAN 5000.

CREATE OR REPLACE TRIGGER T1
BEFORE INSERT ON EMP
FOR EACH ROW
BEGIN
IF :NEW.SAL <=5000 THEN
RAISE_APPLICATION_ERROR(-20101,'SALARY MUST BE MORE THAN 5000');
END IF ;
END ;
/


SQL> BEGIN
2  INSERT INTO EMP(EMPNO,ENAME ,SAL) VALUES (1111,'JOHN',3000);
3  END ;
4  /

O/P :

BEGIN
*
ERROR AT LINE 1:
ORA-20101: SALARY MUST BE MORE THAN 5000
ORA-06512: AT "SCOTT.T1", LINE 3
ORA-04088: ERROR DURING EXECUTION OF TRIGGER 'SCOTT.T1'
ORA-06512: AT LINE 2



--> WRITE A PL/SQL ROW LEVEL TRIGGER ON DEPT TABLE WHENEVER USER UPDATE THE DATA INTO A DEPT TABLE IT SHOULD MODIFY ON EMP TABLE

CREATE OR REPLACE TRIGGER T2
AFTER UPDATE ON DEPT
FOR EACH ROW
BEGIN
UPDATE EMP
SET DEPTNO = :NEW.DEPTNO
WHERE DEPTNO =:OLD.DEPTNO;
END ;
/

BEGIN
UPDATE DEPT
SET DEPTNO =30
WHERE DEPTNO=60;
END ;
/

--> WRITE A PL/SQL  TRIGGER USING EMP,DEPT TABLE IMPLEMENT ON DELETE WITH OUT USING CASCADE ON DELETE .

CREATE OR REPLACE TRIGGER T4
AFTER DELETE ON DEPT
FOR EACH ROW
BEGIN
DELETE FROM EMP
WHERE DEPTNO= :OLD.DEPTNO;
END ;
/


EXAMPLE:1

CREATE SEQUENCE S2
START WITH 1
INCREMENT BY 1;

CREATE TABLE Q2
(
CID NUMBER,
CNAME VARCHAR(20)
);

CREATE OR REPLACE TRIGGER AUTO1
BEFORE INSERT ON Q2
FOR EACH ROW
BEGIN
SELECT S2.NEXTVAL INTO :NEW.CID FROM DUAL;
END ;
/


EXAMPLE:2

CREATE TABLE EMP_TRANS
(
EMPNO NUMBER ,
NAME VARCHAR(20),
OLD_SAL NUMBER,
NEW_SAL NUMBER
);

CREATE OR REPLACE TRIGGER E_TRANS
AFTER UPDATE ON EMP
FOR EACH ROW
DECLARE
PRAGMA AUTONOMOUS_TRANSACTION ;
BEGIN
INSERT INTO EMP_TRANS(EMPNO,NAME,OLD_SAL,NEW_SAL)
VALUES (:OLD.EMPNO,:OLD.ENAME,:OLD.SAL,:NEW.SAL);
COMMIT ;
END ;
/
