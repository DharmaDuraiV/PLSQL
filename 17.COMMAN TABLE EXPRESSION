Common Table Expression (CTE)
*****************************

--> It is a temporary result set that is defined and used within the execution scope of a SELECT, INSERT, UPDATE, or DELETE statement. 
--> CTEs are defined using the WITH clause and can be referenced multiple times within the main SQL query. 
--> This makes CTEs a great alternative to subqueries.


Syntax:

WITH cte_name AS (
    SELECT query
)
SELECT *
FROM cte_name;

example:
************

waqtd name and salary of the employees who is earning more then average salary .

WITH avg_sal AS (
    SELECT AVG(sal) AS avg_salary
    FROM emp
)
SELECT e.ename, e.sal
FROM emp e, avg_sal a
WHERE e.sal > a.avg_salary;



1. Find all employees who earn more than 2000 using a CTE.

with high_salary as (
                select *
                from emp
                where sal > 2000 )
select ename , sal
from high_salary ;

2. Using a CTE, get the average salary for each department and join it with the DEPT table.

with avg_sal as (
select avg(sal) avg_salary ,deptno 
from emp
group by deptno ) 
select dname , a.avg_salary
from dept d ,avg_sal a 
where d.deptno =a.deptno ;

3. Write a CTE to display employees along with their manager names.

with manager as (
select empno ,ename 
from emp )
select e.ename ,m.ename 
from emp e ,manager m
where e.mgr=m.empno ;

4. Use a CTE to list the top 3 highest paid employees using `DENSE_RANK()`.

WITH TOP_SALARY_PAID AS ( 
                        SELECT DENSE_RANK() OVER (ORDER BY SAL DESC) R ,EMPNO
                        FROM EMP )
                       SELECT E1.ENAME, E1.SAL
                       FROM EMP E1 , TOP_SALARY_PAID T
                       WHERE E1.EMPNO =T.EMPNO AND T.R<= 3 
                       ORDER BY SAL DESC;


5. Create a CTE that shows the maximum salary in each department and join it with department names.

6. Find all employees who do not have a manager (MGR is NULL) using a CTE.

7. Using a CTE, list employees who earn more than their manager.

8. Write a CTE to count the number of employees in each department and display department name along with count.

9. Find employees who work in departments located in 'DALLAS' using a CTE.

10. Using nested CTEs, find the department name with the highest total salary paid to employees.


