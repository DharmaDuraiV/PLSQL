
Example :

lets create the normal procedure to update the employees salary based on the employee number.

WAQTD EMPNO AND SALARY OF ALL THE EMPLOYEE AND ARRANGE THE SALARY IN ASCENDING ORDER :

SELECT EMPNO , SAL
FROM EMP
ORDER BY SAL
/

     EMPNO        SAL
---------- ----------
      7369        800
      7900        950
      7876       1100
      7521       1250

Normal procedure:

      create or replace procedure emp_salary_update( p_empno number)
      is 
      begin 
            update emp
            set sal =sal+100
            where empno=p_empno ;
                  rollback ;
      end ;
      /

calling program / MAIN :

      BEGIN 
         update emp 
         set sal=sal+100
         where empno =  7369;
             emp_salary_update( 7900 );
         commit ;
      END ;
      /

NOTES : 
      EXIST OUTPUT   --> : 7369  SALARY IS 800 AND 7900 SALARY IS 950
      NEW OUTPUT     --> : 7369  SALARY IS 800 AND 7900 SALARY IS 950


    PRAGME AUTONOMOUS_TRANSACTION :
    -------------------------------

    PRAGMA AUTONOMOUS_TRANSACTION allows a PL/SQL block to execute as an independent transaction.
    The block can COMMIT or ROLLBACK its work without affecting the main transaction.
    Can be used inside procedures, functions, packages, and triggers.
    Since it is independent, you must include COMMIT or ROLLBACK inside the block.
    Mostly used for logging, auditing, debugging, and error handling, where you want to save information even if the main transaction fails.
    After the autonomous transaction finishes, control returns back to the main transaction.
    


Normal procedure:

      create or replace procedure emp_salary_update( p_empno number)
      is 
      pragma AUTONOMOUS_TRANSACTION;
      begin 
            update emp
            set sal =sal+100
            where empno=p_empno ;
                  rollback ;
      end ;
      /

calling program / MAIN :

      BEGIN 
         update emp 
         set sal=sal+100
         where empno =  7369;
             emp_salary_update( 7900 );
         commit ;
      END ;
      /

NOTES : 
      EXIST OUTPUT   --> : 7369  SALARY IS 800 AND 7900 SALARY IS 950
      NEW OUTPUT     --> : 7369  SALARY IS 900 AND 7900 SALARY IS 950


Assignments

ðŸ”¹WRITE A PLSQL STORE PROCEDURE to update salary of all
   if the job is manager 5% hike 
   or the job is analyst 3% hike 
   else 1% .
ðŸ”¹WRITE A PLSQL STORE PROCEDURE to delete the emp table record based on empno .
ðŸ”¹ Write a procedure that accepts DEPTNO as a parameter and displays the names and salaries of all employees in that department.
ðŸ”¹ Write a procedure to update the deduction salary of employees: 2% for MANAGER, 1% for ANALYST, and 1% for others.
ðŸ”¹ Write a procedure that accepts EMPLOYEE NUMBER and deletes the corresponding employee from the EMP table.
ðŸ”¹ Write a procedure that accepts a JOB name and returns the count of employees with that job.
ðŸ”¹ Write a procedure that accepts minimum and maximum salary as parameters and displays all employees whose salary falls within that range.
ðŸ”¹ Write a procedure that displays each department name along with the number of employees in that department.
ðŸ”¹ Write a procedure that displays all employees who have a non-null commission.
ðŸ”¹ Write a procedure that accepts EMPLOYEE NUMBER and increases the salary by a custom percentage passed as a parameter.
